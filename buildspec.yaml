version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
      docker: 18
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install --upgrade awscli

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Building image with tag ${IMAGE_TAG}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t ${REPOSITORY_URI}:${IMAGE_TAG} .
      - docker tag ${REPOSITORY_URI}:${IMAGE_TAG} ${REPOSITORY_URI}:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - docker push ${REPOSITORY_URI}:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' ${REPOSITORY_URI}:${IMAGE_TAG} > imageDefinitions.json
      - cat imageDefinitions.json
      - printf '{"Version":"1.0","ImageURI":"%s"}' ${REPOSITORY_URI}:${IMAGE_TAG} > imageDetail.json
      - cat imageDetail.json

artifacts:
  files:
    - imageDefinitions.json
    - imageDetail.json
    - appspec.yaml
    - taskdef.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDefinitions.json
        - imageDetail.json

cache:
  paths:
    - '/root/.m2/**/*'
    - '/root/.pip-cache/**/*'

env:
  variables:
    AWS_DEFAULT_REGION: "us-east-1"
  parameter-store:
    AWS_ACCOUNT_ID: "/CodeBuild/AWS_ACCOUNT_ID"
    ECR_REPOSITORY: "/CodeBuild/ECR_REPOSITORY"
